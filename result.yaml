openapi: 3.1.0
info:
  version: 1.0.0
  title: Swagger Petstore
servers:
  - url: http://merged.swagger.io/v1
paths:
  /pets:
    parameters:
      - name: toto
        in: query
        description: toto
        required: false
        schema:
          type: string
      - name: titi
        in: query
        description: toto
        required: false
        schema:
          type: string
      - name: tata
        in: query
        description: toto
        required: false
        schema:
          type: string
    delete:
      summary: lol human toto
      operationId: dummyTamer
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            maximum: !!float 100
            format: int32
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '200':
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
      servers:
        - url: http://humanstore.swagger.io/v1
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            maximum: !!float 100
            format: int32
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '200':
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
      servers:
        - url: http://petstore.swagger.io/v1
    post:
      summary: Create a pet
      operationId: createPets
      tags:
        - pets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '201':
          description: Null response
      servers:
        - url: http://petstore.swagger.io/v1
  /humans:
    get:
      summary: List all humans
      operationId: listhumans
      tags:
        - humans
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            maximum: !!float 100
            format: int32
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '200':
          description: A paged array of humans
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/humans"
      servers:
        - url: http://humanstore.swagger.io/v1
    post:
      summary: Create a human
      operationId: createhumans
      tags:
        - humans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/human'
        required: true
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '201':
          description: Null response
      servers:
        - url: http://humanstore.swagger.io/v1
  /humans/{humanId}:
    get:
      x-private: coucou
      summary: Info for a specific human
      operationId: showhumanById
      tags:
        - humans
      parameters:
        - name: humanId
          in: path
          required: true
          description: The id of the human to retrieve
          schema:
            type: string
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/human"
      servers:
        - url: http://humanstore.swagger.io/v1
  /pets/{petId}:
    parameters:
      - name: petId
        in: path
        required: true
        description: The id of the pet to retrieve
        schema:
          type: string
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
      servers:
        - url: http://petstore.swagger.io/v1
components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    human:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    humans:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/human"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Pets:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/Pet"
    PetMax:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          maximum: !!float 13
          format: int64
        name:
          type: string
        tag:
          type: string
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://example.com/api/oauth/dialog
          scopes:
            write:humans: modify pets in your account
            read:humans: read your pets
            read:pets: read your pets
            write:pets: modify pets in your account
    BasicAuth:
      type: http
      scheme: basic
